`configure' configures uim 1.7.0 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/uim]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

X features:
  --x-includes=DIR    X include files are in DIR
  --x-libraries=DIR   X library files are in DIR

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-static[=PKGS]  build static libraries [default=no]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-maintainer-mode  enable make rules and dependencies not useful
			  (and sometimes confusing) to the casual installer
  --disable-rpath         do not hardcode runtime library paths
  --enable-openssl        enable openssl [default=no]
  --disable-nls           do not use Native Language Support
  --disable-gnome-applet  disable uim applet for Gnome panel
  --enable-gnome3-applet  enable uim applet for Gnome3 panel [default=yes]
  --enable-qt4-qt3support enable support for Qt3Support module in Qt4
                          [default=yes]
  --enable-default-toolkit
                          Determine default toolkit (gtk, gtk3, qt, or qt4)
                          [default=gtk]
  --enable-debug          enable debugging [default=no]
  --disable-fep           disable uim-fep
  --disable-emacs         disable uim.el
  --enable-dict           build dictionary utility for uim (Anthy and Canna)
                          [default=no]
  --enable-kde-applet     build uim applet for KDE panel [default=yes]
  --enable-kde4-applet    build uim applet for KDE4 panel (experimental)
                          [default=no]
  --enable-pref           build graphical utility to edit user settings
                          [default=yes]
  --enable-anthy-static   [default=no]
  --enable-anthy-utf8-static
                          [default=no]
  --enable-notify[=agent-list] (HIGHLY EXPERIMENTAL)
                          enable system message notification for users
                          (specify comma separated notification agent list
                          from stderr, libnotify, knotify3 and growl)
  --enable-warnings-into-error
                          Treat compiler warnings as error [default=no if
                          !debug]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot=DIR Search for dependent libraries within DIR
                        (or the compiler's sysroot if not specified).
  --with-gnu-ld           assume the C compiler uses GNU ld default=no
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --without-m17nlib       Don't build against m17nlib
  --with-scim             build against SCIM (broken) [default=no]
  --without-anthy         Don't build with libanthy
  --with-anthy-utf8       build with libanthy (UTF-8) [default=no]
  --with-canna            Use Canna [default=no]
  --with-wnn              Build with libwnn [default=no]
  --with-wnn-libraries=DIR Directory where wnn library is installed (optional)
  --with-wnn-includes=DIR  Directory where wnn header files are installed (optional)
  --with-mana             Build a plugin for Mana [default=yes]
  --with-prime            Build a plugin for PRIME [default=yes]
  --with-sj3              Use SJ3 [default=no]
  --with-skk              Build a plugin for SKK [default=yes]
  --with-curl             Build with libcurl [default=no]
  --with-expat=PREFIX     Use system Expat library
  --with-openssl-dir=PATH     Specify path to OpenSSL installation
  --without-openssl-header-check Disable OpenSSL version consistency check
  --with-ssl-engine       Enable OpenSSL (hardware) ENGINE support
  --with-sqlite3          Build with SQLite3 [default=no]
  --with-ffi              Build with libffi [default=no]
  --with-x                use the X Window System
  --with-xft              Xft (antialias) support (default=yes)
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --without-gtk2          don't build against Gtk+2
  --with-gtk3             build GTK+3 immodule and helper applications
                          [default=yes]
  --with-qt               build qt helper applications [default=no]
  --with-qt-immodule      Build qt-immodule extension [default=no]
  --with-qt4              build qt4 helper applications [default=no]
  --with-qt4-immodule     Build qt4-immodule extension [default=no]
  --with-lispdir          override the default lisp directory
  --with-eb               Build with EB [default=no]
  --with-eb-conf=FILE     eb.conf file is FILE [[SYSCONFDIR/eb.conf]]
  --with-libedit=DIR, Enable libedit support
				      [default=yes]


Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  OBJC        Objective C compiler command
  OBJCFLAGS   Objective C compiler flags
  CXXCPP      C++ preprocessor
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  M17NLIB_CFLAGS
              C compiler flags for M17NLIB, overriding pkg-config
  M17NLIB_LIBS
              linker flags for M17NLIB, overriding pkg-config
  SCIM_CFLAGS C compiler flags for SCIM, overriding pkg-config
  SCIM_LIBS   linker flags for SCIM, overriding pkg-config
  ANTHY_UTF8_CFLAGS
              C compiler flags for ANTHY_UTF8, overriding pkg-config
  ANTHY_UTF8_LIBS
              linker flags for ANTHY_UTF8, overriding pkg-config
  PRIME_CFLAGS
              C compiler flags for PRIME, overriding pkg-config
  PRIME_LIBS  linker flags for PRIME, overriding pkg-config
  CURL_CFLAGS C compiler flags for CURL, overriding pkg-config
  CURL_LIBS   linker flags for CURL, overriding pkg-config
  SQLITE3_CFLAGS
              C compiler flags for SQLITE3, overriding pkg-config
  SQLITE3_LIBS
              linker flags for SQLITE3, overriding pkg-config
  FFI_CFLAGS  C compiler flags for FFI, overriding pkg-config
  FFI_LIBS    linker flags for FFI, overriding pkg-config
  X11_CFLAGS  C compiler flags for X11, overriding pkg-config
  X11_LIBS    linker flags for X11, overriding pkg-config
  XMKMF       Path to xmkmf, Makefile generator for X Window System
  GTK2_CFLAGS C compiler flags for GTK2, overriding pkg-config
  GTK2_LIBS   linker flags for GTK2, overriding pkg-config
  GTK2_4_CFLAGS
              C compiler flags for GTK2_4, overriding pkg-config
  GTK2_4_LIBS linker flags for GTK2_4, overriding pkg-config
  APPLET_GNOME_CFLAGS
              C compiler flags for APPLET_GNOME, overriding pkg-config
  APPLET_GNOME_LIBS
              linker flags for APPLET_GNOME, overriding pkg-config
  APPLET_2_14_CFLAGS
              C compiler flags for APPLET_2_14, overriding pkg-config
  APPLET_2_14_LIBS
              linker flags for APPLET_2_14, overriding pkg-config
  GTK3_CFLAGS C compiler flags for GTK3, overriding pkg-config
  GTK3_LIBS   linker flags for GTK3, overriding pkg-config
  APPLET_GNOME3_CFLAGS
              C compiler flags for APPLET_GNOME3, overriding pkg-config
  APPLET_GNOME3_LIBS
              linker flags for APPLET_GNOME3, overriding pkg-config
  EMACS       the Emacs editor command
  EMACSLOADPATH
              the Emacs library search path
  DICT_CFLAGS C compiler flags for DICT, overriding pkg-config
  DICT_LIBS   linker flags for DICT, overriding pkg-config
  LIBNOTIFY_CFLAGS
              C compiler flags for LIBNOTIFY, overriding pkg-config
  LIBNOTIFY_LIBS
              linker flags for LIBNOTIFY, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <uim-en@googlegroups.com>.
